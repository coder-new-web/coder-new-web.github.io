import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,a as t,b as e,f as p}from"./app-af427ef1.js";const l={},o=e("p",null,"ECMAScript 提供了 Math 对象作为保存数学公式、信息和计算的地方。Math 对象提供了一些辅助计算的属性和方法。",-1),c=p(`<div class="hint-container warning"><p class="hint-container-title">注意</p><p>Math 对象上提供的计算要比直接在 JavaScript 实现的快得多，因为 Math 对象上的计算使用了 JavaScript 引擎中更高效的实现和处理器指令。但使用 Math 计算的问题是精度会因浏览器、操作系统、指令集和硬件而异。</p></div><h2 id="math对象属性" tabindex="-1"><a class="header-anchor" href="#math对象属性" aria-hidden="true">#</a> Math对象属性</h2><p>Math对象右一些属性，主要用于保存数学中的一些特殊值。见下表：</p><table><thead><tr><th style="text-align:left;">属 性</th><th style="text-align:left;">说 明</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;">Math.E</td><td style="text-align:left;">自然对数的基数 e 的值</td><td style="text-align:left;">2.718281828459045</td></tr><tr><td style="text-align:left;">Math.LN10</td><td style="text-align:left;">10 为底的自然对数</td><td style="text-align:left;">2.302585092994046</td></tr><tr><td style="text-align:left;">Math.LN2</td><td style="text-align:left;">2 为底的自然对数</td><td style="text-align:left;">0.6931471805599453</td></tr><tr><td style="text-align:left;">Math.LOG2E</td><td style="text-align:left;">以 2 为底 e 的对数</td><td style="text-align:left;">1.4426950408889634</td></tr><tr><td style="text-align:left;">Math.LOG10E</td><td style="text-align:left;">以 10 为底 e 的对数</td><td style="text-align:left;">0.4342944819032518</td></tr><tr><td style="text-align:left;">Math.PI</td><td style="text-align:left;">π 的值</td><td style="text-align:left;">3.141592653589793</td></tr><tr><td style="text-align:left;">Math.SQRT1_2</td><td style="text-align:left;">1/2 的平方根</td><td style="text-align:left;">0.7071067811865476</td></tr><tr><td style="text-align:left;">Math.SQRT2</td><td style="text-align:left;">2 的平方根</td><td style="text-align:left;">1.4142135623730951</td></tr></tbody></table><h2 id="min-和max-方法" tabindex="-1"><a class="header-anchor" href="#min-和max-方法" aria-hidden="true">#</a> min()和max()方法</h2><p>min()和 max()方法用于确定一组数值中的最小值和最大值。这两个方法都接收任意多个参数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 54</span>
<span class="token keyword">let</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>

<span class="token comment">//我觉得下面方法更好</span>
<span class="token keyword">let</span> values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="舍入方法" tabindex="-1"><a class="header-anchor" href="#舍入方法" aria-hidden="true">#</a> 舍入方法</h2><ul><li>Math.ceil()方法始终向上舍入为最接近的整数。</li><li>Math.floor()方法始终向下舍入为最接近的整数。</li><li>Math.round()方法执行四舍五入。</li><li>Math.fround()方法返回数值最接近的单精度（32 位）浮点值表示。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">25.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 26</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">25.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 26</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 26</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">25.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">25.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25 </span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">25.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 26</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">25.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 26</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.4000000059604645</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">25.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25.899999618530273</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="random" tabindex="-1"><a class="header-anchor" href="#random" aria-hidden="true">#</a> random()</h2><p>Math.random()方法返回一个 0~1 范围内的随机数，其中包含 0 但不包含 1。</p><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">selectFrom</span><span class="token punctuation">(</span><span class="token parameter">lowerValue<span class="token punctuation">,</span> upperValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> choices <span class="token operator">=</span> upperValue <span class="token operator">-</span> lowerValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
 <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> choices <span class="token operator">+</span> lowerValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token function">selectFrom</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2~10 范围内的值，其中包含 2 和 10 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Math.random()方法在这里出于演示目的是没有问题的。如果是为了加密而需要生成随机数（传给生成器的输入需要较高的不确定性），那么建议使用 window.crypto.getRandomValues()。</p></div><p>window.crypto.getRandomValues()语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cryptoObj<span class="token punctuation">.</span><span class="token function">getRandomValues</span><span class="token punctuation">(</span>typedArray<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>typedArray:是一个基于整数的 TypedArray，它可以是 Int8Array、Uint8Array、Int16Array、 Uint16Array、 Int32Array 或者 Uint32Array。在数组中的所有的元素会被随机数重写。（注释：生成的随机数储存在 typedArray 数组上。）</p><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 假设 window.crypto.getRandomValues 可用 */</span>

<span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint32Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span><span class="token function">getRandomValues</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Your lucky numbers:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>==待了解：==Int8Array、Uint8Array、Int16Array、 Uint16Array、 Int32Array 或者 Uint32Array含义以及区别</p><h2 id="其它方法" tabindex="-1"><a class="header-anchor" href="#其它方法" aria-hidden="true">#</a> 其它方法</h2><table><thead><tr><th style="text-align:left;">方 法</th><th style="text-align:left;">说 明</th></tr></thead><tbody><tr><td style="text-align:left;">Math.abs(x)</td><td style="text-align:left;">返回 x 的绝对值</td></tr><tr><td style="text-align:left;">Math.exp(x)</td><td style="text-align:left;">返回 Math.E 的 x 次幂</td></tr><tr><td style="text-align:left;">Math.expm1(x)</td><td style="text-align:left;">等于 Math.exp(x) - 1</td></tr><tr><td style="text-align:left;">Math.log(x)</td><td style="text-align:left;">返回 x 的自然对数</td></tr><tr><td style="text-align:left;">Math.log1p(x)</td><td style="text-align:left;">等于 1 + Math.log(x)</td></tr><tr><td style="text-align:left;">Math.pow(x, power)</td><td style="text-align:left;">返回 x 的 power 次幂</td></tr><tr><td style="text-align:left;">Math.hypot(...nums)</td><td style="text-align:left;">返回 nums 中每个数平方和的平方根</td></tr><tr><td style="text-align:left;">Math.clz32(x)</td><td style="text-align:left;">返回 32 位整数 x 的前置零的数量</td></tr><tr><td style="text-align:left;">Math.sign(x)</td><td style="text-align:left;">返回表示 x 符号的 1、0、-0 或-1</td></tr><tr><td style="text-align:left;">Math.trunc(x)</td><td style="text-align:left;">返回 x 的整数部分，删除所有小数</td></tr><tr><td style="text-align:left;">Math.sqrt(x)</td><td style="text-align:left;">返回 x 的平方根</td></tr><tr><td style="text-align:left;">Math.cbrt(x)</td><td style="text-align:left;">返回 x 的立方根</td></tr><tr><td style="text-align:left;">Math.acos(x)</td><td style="text-align:left;">返回 x 的反余弦</td></tr><tr><td style="text-align:left;">Math.acosh(x)</td><td style="text-align:left;">返回 x 的反双曲余弦</td></tr><tr><td style="text-align:left;">Math.asin(x)</td><td style="text-align:left;">返回 x 的反正弦</td></tr><tr><td style="text-align:left;">Math.asinh(x)</td><td style="text-align:left;">返回 x 的反双曲正弦</td></tr><tr><td style="text-align:left;">Math.atan(x)</td><td style="text-align:left;">返回 x 的反正切</td></tr><tr><td style="text-align:left;">Math.atanh(x)</td><td style="text-align:left;">返回 x 的反双曲正切</td></tr><tr><td style="text-align:left;">Math.atan2(y, x)</td><td style="text-align:left;">返回 y/x 的反正切</td></tr><tr><td style="text-align:left;">Math.cos(x)</td><td style="text-align:left;">返回 x 的余弦</td></tr><tr><td style="text-align:left;">Math.sin(x)</td><td style="text-align:left;">返回 x 的正弦</td></tr><tr><td style="text-align:left;">Math.tan(x)</td><td style="text-align:left;">返回 x 的正切</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>即便这些方法都是由 ECMA-262 定义的，对正弦、余弦、正切等计算的实现仍然取决于浏览器，因为计算这些值的方式有很多种。结果，这些方法的精度可能因实现而异。</p></div>`,24);function i(u,r){return a(),s("div",null,[o,t(" more "),c])}const m=n(l,[["render",i],["__file","Math.html.vue"]]);export{m as default};
