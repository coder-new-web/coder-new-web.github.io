const e=JSON.parse('{"key":"v-251728f2","path":"/web/css/css-in-js.html","title":"Emotion(CSS-IN-JS)","lang":"zh-CN","frontmatter":{"title":"Emotion(CSS-IN-JS)","date":"2023-06-26T00:00:00.000Z","category":["实用技巧"],"description":"CSS-IN-JS解决方案有insert-css和Emotion。 为什么会有 CSS-IN-JS 在我们的现有认知中，我们都是提倡将结构化样式和行为进行分离的，即html、css、js代码三者都分离编写。而CSS-IN-JS这种解决方案，它提倡我们把CSS代码写在JavaScript代码当中，这与我们传统认知是背道而驰的。 1. 第一个原因是因为开发...","head":[["meta",{"property":"og:url","content":"https://github.com/coder-new-web/web/css/css-in-js.html"}],["meta",{"property":"og:site_name","content":"Coder-New"}],["meta",{"property":"og:title","content":"Emotion(CSS-IN-JS)"}],["meta",{"property":"og:description","content":"CSS-IN-JS解决方案有insert-css和Emotion。 为什么会有 CSS-IN-JS 在我们的现有认知中，我们都是提倡将结构化样式和行为进行分离的，即html、css、js代码三者都分离编写。而CSS-IN-JS这种解决方案，它提倡我们把CSS代码写在JavaScript代码当中，这与我们传统认知是背道而驰的。 1. 第一个原因是因为开发..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Coder-New"}],["meta",{"property":"article:published_time","content":"2023-06-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Emotion(CSS-IN-JS)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Coder-New\\",\\"url\\":\\"https://blog.coder-new.cn\\"}]}"]]},"headers":[{"level":2,"title":"为什么会有 CSS-IN-JS","slug":"为什么会有-css-in-js","link":"#为什么会有-css-in-js","children":[]},{"level":2,"title":"CSS-IN-JS 介绍","slug":"css-in-js-介绍","link":"#css-in-js-介绍","children":[]},{"level":2,"title":"Emotion 库","slug":"emotion-库","link":"#emotion-库","children":[{"level":3,"title":"css 属性优先级","slug":"css-属性优先级","link":"#css-属性优先级","children":[]},{"level":3,"title":"Styled Components样式化组件","slug":"styled-components样式化组件","link":"#styled-components样式化组件","children":[]},{"level":3,"title":"根据props属性覆盖样式","slug":"根据props属性覆盖样式","link":"#根据props属性覆盖样式","children":[]},{"level":3,"title":"为任何组件添加样式","slug":"为任何组件添加样式","link":"#为任何组件添加样式","children":[]},{"level":3,"title":"通过父组件设置子组件的样式","slug":"通过父组件设置子组件的样式","link":"#通过父组件设置子组件的样式","children":[]},{"level":3,"title":"嵌套选择器 &","slug":"嵌套选择器","link":"#嵌套选择器","children":[]},{"level":3,"title":"as 属性","slug":"as-属性","link":"#as-属性","children":[]},{"level":3,"title":"样式组合","slug":"样式组合","link":"#样式组合","children":[]},{"level":3,"title":"全局样式","slug":"全局样式","link":"#全局样式","children":[]},{"level":3,"title":"使用keyframes方法定义关键帧动画","slug":"使用keyframes方法定义关键帧动画","link":"#使用keyframes方法定义关键帧动画","children":[]},{"level":3,"title":"下载主题模块","slug":"下载主题模块","link":"#下载主题模块","children":[]}]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":7.22,"words":2167},"filePathRelative":"web/css/css-in-js.md","localizedDate":"2023年6月26日","copyright":{"author":"Coder-New"},"autoDesc":true}');export{e as data};
