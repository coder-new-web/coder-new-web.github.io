import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as a,c as d,a as t,b as n,d as e,e as p,f as s}from"./app-af427ef1.js";const m={},i=s('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><code>npm i -f</code>或<code>npm i --force</code>：将强制 npm 获取远程资源，即使磁盘上存在本地副本也是如此。</p><p><code>npm i --legacy-peer-deps</code>：在安装时忽略所有 peerDependencies，采用 npm 版本 4 到版本 6 的样式。</p><p>出现这个的直接原因是node版本对应的npm版本问题，根本原因是7.x的版本比6.x的版本更加严格。</p><p>所以这里<code>npm i –legacy-peer-deps</code>方式更好。</p><p>如果这不能立即起作用，也许可以先删除node_modules和package-lock.json。它们将被重新创建。最后不行就是降node版本（可使用node版本管理工具）。</p><p>最初遇到这个问题是利用命令行创建uni-app项目遇到的。</p><h2 id="node版本约定" tabindex="-1"><a class="header-anchor" href="#node版本约定" aria-hidden="true">#</a> node版本约定</h2>',8),l=n("br",null,null,-1),h={href:"https://github.com/nvm-sh/nvm#nvmrc",target:"_blank",rel:"noopener noreferrer"};function _(f,u){const o=r("ExternalLinkIcon");return a(),d("div",null,[t(" more "),i,n("p",null,[e("根目录下创建.nvmrc文件，配合nvm进行约定node版本。"),l,e(" nvmrc文件介绍："),n("a",h,[e("https://github.com/nvm-sh/nvm#nvmrc"),p(o)])])])}const g=c(m,[["render",_],["__file","force-and-legacy-peer-deps.html.vue"]]);export{g as default};
