const e=JSON.parse('{"key":"v-24069220","path":"/web/mobile-dev/flutter/flutter01.html","title":"初识flutter","lang":"zh-CN","frontmatter":{"title":"初识flutter","date":"2023-05-11T00:00:00.000Z","category":["移动开发"],"description":"移动端跨平台技术演进 ! (./images/mobile-technological-evolution.png) 垮端技术四要素 高效率——研发效率、迭代速度; 高性能——流畅度、内存表现、加载市场、包大小等; 动态化——及时更新迭代; 高一执性——多端UI展示一致; Flutter特性和优势 1. 跨平台：一份代码多端运行，兼顾Android、I...","head":[["meta",{"property":"og:url","content":"https://github.com/coder-new-web/web/mobile-dev/flutter/flutter01.html"}],["meta",{"property":"og:site_name","content":"Coder-New"}],["meta",{"property":"og:title","content":"初识flutter"}],["meta",{"property":"og:description","content":"移动端跨平台技术演进 ! (./images/mobile-technological-evolution.png) 垮端技术四要素 高效率——研发效率、迭代速度; 高性能——流畅度、内存表现、加载市场、包大小等; 动态化——及时更新迭代; 高一执性——多端UI展示一致; Flutter特性和优势 1. 跨平台：一份代码多端运行，兼顾Android、I..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/coder-new-web/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"初识flutter"}],["meta",{"property":"article:author","content":"Coder-New"}],["meta",{"property":"article:published_time","content":"2023-05-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识flutter\\",\\"image\\":[\\"https://github.com/coder-new-web/\\"],\\"datePublished\\":\\"2023-05-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Coder-New\\",\\"url\\":\\"https://blog.coder-new.cn\\"}]}"]]},"headers":[{"level":2,"title":"移动端跨平台技术演进","slug":"移动端跨平台技术演进","link":"#移动端跨平台技术演进","children":[]},{"level":2,"title":"垮端技术四要素","slug":"垮端技术四要素","link":"#垮端技术四要素","children":[]},{"level":2,"title":"Flutter特性和优势","slug":"flutter特性和优势","link":"#flutter特性和优势","children":[]},{"level":2,"title":"Dart语言","slug":"dart语言","link":"#dart语言","children":[]},{"level":2,"title":"Flutter框架层次分析","slug":"flutter框架层次分析","link":"#flutter框架层次分析","children":[]},{"level":2,"title":"Flutter Engine线程模型","slug":"flutter-engine线程模型","link":"#flutter-engine线程模型","children":[]},{"level":2,"title":"Flutter生命周期","slug":"flutter生命周期","link":"#flutter生命周期","children":[]},{"level":2,"title":"常用Widget用法","slug":"常用widget用法","link":"#常用widget用法","children":[]},{"level":2,"title":"Flutter路由管理","slug":"flutter路由管理","link":"#flutter路由管理","children":[]},{"level":2,"title":"网络请求和序列化数据","slug":"网络请求和序列化数据","link":"#网络请求和序列化数据","children":[]},{"level":2,"title":"包管理工具","slug":"包管理工具","link":"#包管理工具","children":[]},{"level":2,"title":"如何引入dart文件","slug":"如何引入dart文件","link":"#如何引入dart文件","children":[]},{"level":2,"title":"与原生平台通信——Platform Channel","slug":"与原生平台通信——platform-channel","link":"#与原生平台通信——platform-channel","children":[]},{"level":2,"title":"Flutter渲染原理","slug":"flutter渲染原理","link":"#flutter渲染原理","children":[]},{"level":2,"title":"Flutter常见优化策略","slug":"flutter常见优化策略","link":"#flutter常见优化策略","children":[]}],"git":{"contributors":[{"name":"coder-new","email":"2578417052@qq.com","commits":1}]},"readingTime":{"minutes":8.48,"words":2543},"filePathRelative":"web/mobile-dev/flutter/flutter01.md","localizedDate":"2023年5月11日","copyright":{"author":"Coder-New"},"autoDesc":true}');export{e as data};
