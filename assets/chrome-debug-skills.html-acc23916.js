import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o,c,f as d,b as e,d as a}from"./app-af427ef1.js";const t={},i=d('<p>Chrome高级调试技巧总结</p><h2 id="一键重新发起请求" tabindex="-1"><a class="header-anchor" href="#一键重新发起请求" aria-hidden="true">#</a> 一键重新发起请求</h2><p>该方式仅适用于<code>XMLHttpRequest</code>请求方式，不适用于<code>fetch</code>：</p><ol><li>在<code>network</code>找到对应的请求</li><li>右击鼠标选择<code>Replay XHR</code>，就会重新发送XHR请求。</li></ol><h2 id="在控制台重新发送请求" tabindex="-1"><a class="header-anchor" href="#在控制台重新发送请求" aria-hidden="true">#</a> 在控制台重新发送请求</h2><p>使用场景：需要修改下参数重新发送请求，具体操作步骤：</p><ol><li>打开<code>network</code></li><li>找到需要修改参数的请求</li><li>右击选择<code>Copy as fetch</code></li><li>粘贴到<code>console</code>，修改请求参数，按回车</li><li>在<code>network</code>中查看响应结果</li></ol><h2 id="拷贝对象" tabindex="-1"><a class="header-anchor" href="#拷贝对象" aria-hidden="true">#</a> 拷贝对象</h2><p>控制台选中对象后右键，选择<code>Copy as Object</code></p><h2 id="控制台获取elements面板选中的元素" tabindex="-1"><a class="header-anchor" href="#控制台获取elements面板选中的元素" aria-hidden="true">#</a> 控制台获取Elements面板选中的元素</h2><ol><li>在<code>Elements</code>面板里选中需要访问的元素</li><li>在<code>Console</code>面板里输入<code>$0</code></li></ol><h2 id="截取一张全屏网页" tabindex="-1"><a class="header-anchor" href="#截取一张全屏网页" aria-hidden="true">#</a> 截取一张全屏网页</h2><ol><li>打开需要截图网页</li><li>mac下运行按cmd + shift + p，window下运行按ctrl + shift + p</li><li>输入Capture full size screenshot按下回车</li></ol><h2 id="控制台引用上一次执行的结果" tabindex="-1"><a class="header-anchor" href="#控制台引用上一次执行的结果" aria-hidden="true">#</a> 控制台引用上一次执行的结果</h2><p>关键词：<code>$_</code></p>',15),s=e("h2",{id:"选择器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#选择器","aria-hidden":"true"},"#"),a(),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mtext",null,"和")]),e("annotation",{encoding:"application/x-tex"},"和")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.6833em"}}),e("span",{class:"mord cjk_fallback"},"和")])])]),a("$选择器")],-1),n=e("p",null,[a("在控制台使用"),e("code",null,"document.querySelector"),a("和"),e("code",null,"document.querySelectorAll"),a("选择当前页面的元素是最常见的需求了，不过着实有点太长了，咱们可以使用"),e("code",null,"$"),a("和"),e("code",null,"$$"),a("替代。")],-1),r=[i,s,n];function h(p,u){return o(),c("div",null,r)}const _=l(t,[["render",h],["__file","chrome-debug-skills.html.vue"]]);export{_ as default};
