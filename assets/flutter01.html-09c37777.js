import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t,f as e}from"./app-af427ef1.js";const p="/assets/mobile-technological-evolution-2d2ab31d.png",o="/assets/flutter-framework-1c2f1c31.png",c="/assets/widget-3676129a.png",l="/assets/statefulWidget-lift-cycle-93e61f95.png",i="/assets/widget-common-use-8e040732.png",u="/assets/network-request-process-72402b9a.png",k="/assets/add_css_colors-e53833d3.png",r="/assets/add_css_colors_success-cea156b5.png",d="/assets/platform_channel-f1a989b4.png",m="/assets/flutter-render-4f0a5106.png",v={},b=e('<h2 id="移动端跨平台技术演进" tabindex="-1"><a class="header-anchor" href="#移动端跨平台技术演进" aria-hidden="true">#</a> 移动端跨平台技术演进</h2><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="垮端技术四要素" tabindex="-1"><a class="header-anchor" href="#垮端技术四要素" aria-hidden="true">#</a> 垮端技术四要素</h2><ul><li>高效率——研发效率、迭代速度</li><li>高性能——流畅度、内存表现、加载市场、包大小等</li><li>动态化——及时更新迭代</li><li>高一执性——多端UI展示一致</li></ul><h2 id="flutter特性和优势" tabindex="-1"><a class="header-anchor" href="#flutter特性和优势" aria-hidden="true">#</a> Flutter特性和优势</h2><ol><li>跨平台：一份代码多端运行，兼顾Android、IOS、Web、Windows、MacOS和Linux六个平台，减少平台差异适配，UI高度一致。</li><li>高性能：release模式下的AOT编译Skia高性能自绘引擎，接近原生体验。</li><li>高效：热重载、快速构建、开发效率高。</li><li>开源协作：Google支持，开源、透明、可靠。</li><li>Dart语言：语言简洁、容易上手。</li></ol><h2 id="dart语言" tabindex="-1"><a class="header-anchor" href="#dart语言" aria-hidden="true">#</a> Dart语言</h2><ol><li>简单易学</li><li>JIT编译：高效开发</li><li>AOT编译：快速</li><li>现代编程语言</li><li>面向对象</li></ol><p>国内大厂应用：阿里巴巴、字节跳动、百度、京东、美团、快手、贝壳。</p><h2 id="flutter框架层次分析" tabindex="-1"><a class="header-anchor" href="#flutter框架层次分析" aria-hidden="true">#</a> Flutter框架层次分析</h2><p><img src="'+o+'" alt="" loading="lazy"><br> 从框架图可以看到，一共分为三层：</p><ul><li>上层Framework层：纯Dart语言实现的一个响应式框架</li><li>中层Engine层：绝大部分由C++实现，也是flutter系统的核心引擎，提供了一系列的Flutter和核心的API底层的实现，如图形文字布局文件之类，是连接框架和系统的一个桥梁</li><li>底层的嵌入层：由平台对应的语言实现，在安卓上就是Java和C++，在iOS上由Objective-C/Objective-C++实现，嵌入层为Flutter系统提供了一个入口。Flutter系统通过入口访问底层系统提供的服务，比如输入法，绘制surface等。</li></ul><h2 id="flutter-engine线程模型" tabindex="-1"><a class="header-anchor" href="#flutter-engine线程模型" aria-hidden="true">#</a> Flutter Engine线程模型</h2><ul><li>Platform Task Runner：运行在平台上的主线程</li><li>UI Task Runner：执行Dart root isolate</li><li>GPU Task Runner：执行设备的GPU命令</li><li>IO Task Runner：文件读取资源加载</li></ul><h2 id="flutter生命周期" tabindex="-1"><a class="header-anchor" href="#flutter生命周期" aria-hidden="true">#</a> Flutter生命周期</h2><p>Flutter理念，万物皆Widget：<br><img src="'+c+'" alt="" loading="lazy"><br> 核心思想使用Widget来构建你的UI界面，搭建界面，包括视图和交互处理。</p><p>Flutter中所说的生命周期，主要是指的statefullWidget的生命周期，主要包含下面几个阶段：</p><ol><li>createState：是StatefullWidget中创建State的方法，当StatefullWidget被调用时会执行createState</li><li>initState：初始化state的初始化调用，一般在这里会执行state各个变量的初始赋值，同时也会在这里与服务端进行交互，即请求服务端的数据来调用state设置state</li><li>didChangeDependencies：当state对象的依赖发生变化的时候会被调用</li><li>Build：返回需要渲染的widget，由于build会被调用多次，因此在这个函数里面只能返回widget的相关逻辑，避免因为多次执行一些状态的异常。</li><li>reassemble：在debug模式下，每次热重载都会调用这个函数。</li><li>didUpdateWidget：在widget重新构建时，Flutter framework会调用Widget.canUpdate来检测Widget树中同一位置的新旧节点，然后决定是否需要更新。如果Widget.canupdate返回的是true，就会调用回调方法，父组件发生build情况下，子组件的这个方法才会被调用，这个方法调用后，一定会再次调用后面的build方法。</li><li>deactivate：在组件中被移除节点后会被调用。</li><li>dispose：如果组件被移除节点，然后还没有被插入到其它节点时，则会继续调用，dispose永久的给它删除掉，永久删除组件，并且释放它的组件资源<br><img src="'+l+'" alt="StatefulWidget生命周期" loading="lazy"></li></ol><p>总结来说就是四个阶段：</p><ol><li>初始化阶段：createState 和 initState。</li><li>组件创建阶段：didChangeDependencies 和 build。</li><li>触发组件build：didChangeDependencies 和 setState 或 didUpdateWidget都会引发组件重新build</li><li>销毁阶段：deactivate 和 dispose。</li></ol><h2 id="常用widget用法" tabindex="-1"><a class="header-anchor" href="#常用widget用法" aria-hidden="true">#</a> 常用Widget用法</h2><figure><img src="'+i+`" alt="基础Widget/UI布局/交互" tabindex="0" loading="lazy"><figcaption>基础Widget/UI布局/交互</figcaption></figure><ol><li>Text用法</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>
  &#39;<span class="token class-name">You</span> have pushed the button <span class="token keyword">this</span> many times<span class="token operator">:</span>&#39;<span class="token punctuation">,</span><span class="token comment">//文字内容</span>
  textAlign<span class="token operator">:</span> <span class="token class-name">TextAlign</span><span class="token punctuation">.</span>right<span class="token punctuation">,</span><span class="token comment">//文本方向</span>
  maxLines<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token comment">//文字行数</span>
  overflow<span class="token operator">:</span> <span class="token class-name">TextOverflow</span><span class="token punctuation">.</span>ellipsis<span class="token punctuation">,</span><span class="token comment">//文字溢出规则</span>
  style<span class="token operator">:</span><span class="token class-name">TextStyle</span><span class="token punctuation">(</span>
    color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span><span class="token comment">//字体颜色</span>
    fontSize<span class="token operator">:</span> <span class="token number">18.0</span><span class="token punctuation">,</span><span class="token comment">//字体大小</span>
    height<span class="token operator">:</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token comment">//字体高度</span>
    fontFamily<span class="token operator">:</span> <span class="token string">&quot;Courier&quot;</span><span class="token punctuation">,</span><span class="token comment">//字体样式</span>
    backgroundColor<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span><span class="token comment">//字体背景颜色</span>
    decoration<span class="token operator">:</span> <span class="token class-name">TextDecoration</span><span class="token punctuation">.</span>underline<span class="token comment">//字体装饰</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Image用法</li></ol><ul><li>如果是网络图片</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Image</span><span class="token punctuation">(</span>
    image<span class="token operator">:</span> <span class="token class-name">NetworkImage</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">200.0</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果是本地图片，项目根目录下新建对应的静态资源文件，比如名叫<code>images</code>，然后<code>pubspec.yaml</code>文件下进行配置</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">flutter</span><span class="token punctuation">:</span>
  <span class="token key atrule">uses-material-design</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">assets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>images/<span class="token punctuation">]</span> <span class="token comment"># 加这一行</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>紧接着在项目内使用：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Image</span><span class="token punctuation">(</span>
    image<span class="token operator">:</span> <span class="token class-name">AssetImage</span><span class="token punctuation">(</span><span class="token string">&quot;images/flutter.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//图片资源路径</span>
    width<span class="token operator">:</span> <span class="token number">200.0</span><span class="token punctuation">,</span><span class="token comment">//图片宽度</span>
    height<span class="token operator">:</span> <span class="token number">200.0</span><span class="token punctuation">,</span><span class="token comment">//图片高度</span>
    alignment<span class="token operator">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span><span class="token comment">//图片对齐方式</span>
    fit<span class="token operator">:</span> <span class="token class-name">BoxFit</span><span class="token punctuation">.</span>contain<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>BoxFit</code>：图片的适应模式，有fill（拉伸填满至指定宽高）、contain（默认，不被拉伸，靠缩放来适应宽高的值）、cover（等比放大或居中填满，图片不会变形，超过部分会被裁剪）、fitWidth（宽度缩放指定宽度）、fitHeight（高度缩放指定高度）、none（图片无适应策略）<br> 3. Column<br> 4. Container</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> _MyHomePageState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyHomePage</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> _counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">_incrementCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _counter<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>
      appBar<span class="token operator">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>
        backgroundColor<span class="token operator">:</span> <span class="token class-name">Theme</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>inversePrimary<span class="token punctuation">,</span>
        title<span class="token operator">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>widget<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">ContainerTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ContainerTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">ContainerTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">_buildImageColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Widget</span> <span class="token function">_buildImageColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token class-name">Container</span><span class="token punctuation">(</span>
          decoration<span class="token operator">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>
            border<span class="token operator">:</span> <span class="token class-name">Border</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>width<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>black38<span class="token punctuation">)</span><span class="token punctuation">,</span>
            borderRadius<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">BorderRadius</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token class-name">Radius</span><span class="token punctuation">.</span><span class="token function">circular</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
          margin<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          child<span class="token operator">:</span> <span class="token class-name">Image</span><span class="token punctuation">.</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token string">&quot;images/flutter.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Container</span><span class="token punctuation">(</span>
          margin<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span>
          child<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;I am Flutter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Container</span><span class="token punctuation">(</span>
          padding<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span>
          child<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;I am Flutter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Row</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">RowTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">RowTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">_buildImageColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Widget</span> <span class="token function">_buildImageColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">const</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>
      crossAxisAlignment<span class="token operator">:</span> <span class="token class-name">CrossAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>
         <span class="token class-name">Row</span><span class="token punctuation">(</span>
          mainAxisAlignment<span class="token operator">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span>
             <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
             <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot; Flutter.&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Row</span><span class="token punctuation">(</span>
          mainAxisSize<span class="token operator">:</span> <span class="token class-name">MainAxisSize</span><span class="token punctuation">.</span>min<span class="token punctuation">,</span><span class="token comment">//主轴方向所占用的空间</span>
          mainAxisAlignment<span class="token operator">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Flutter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Row</span><span class="token punctuation">(</span>
          mainAxisAlignment<span class="token operator">:</span> <span class="token class-name">MainAxisAlignment</span><span class="token punctuation">.</span>start<span class="token punctuation">,</span>
          textDirection<span class="token operator">:</span> <span class="token class-name">TextDirection</span><span class="token punctuation">.</span>rtl<span class="token punctuation">,</span><span class="token comment">//表示水平方向子组件的布局顺序</span>
          children<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Flutter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>Flex</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">FlexTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">FlexTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>
      children<span class="token operator">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>
        <span class="token class-name">Flex</span><span class="token punctuation">(</span>
          direction<span class="token operator">:</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span>
          children<span class="token operator">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>
            <span class="token class-name">Expanded</span><span class="token punctuation">(</span><span class="token comment">//Flex配合Expanded实现弹性布局</span>
                flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                child<span class="token operator">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
                  height<span class="token operator">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>
                  color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Expanded</span><span class="token punctuation">(</span><span class="token comment">//Flex配合Expanded实现弹性布局</span>
                flex<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                child<span class="token operator">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
                  height<span class="token operator">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>
                  color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Padding</span><span class="token punctuation">(</span>
            padding<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token operator">:</span> <span class="token number">20.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            child<span class="token operator">:</span> <span class="token class-name">SizedBox</span><span class="token punctuation">(</span>
              height<span class="token operator">:</span> <span class="token number">100.0</span><span class="token punctuation">,</span>
              child<span class="token operator">:</span> <span class="token class-name">Flex</span><span class="token punctuation">(</span>
                direction<span class="token operator">:</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>vertical<span class="token punctuation">,</span>
                children<span class="token operator">:</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Widget</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span>
                  <span class="token class-name">Expanded</span><span class="token punctuation">(</span>
                    flex<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                    child<span class="token operator">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
                      height<span class="token operator">:</span> <span class="token number">30.0</span><span class="token punctuation">,</span>
                      color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span>
                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token keyword">const</span> <span class="token class-name">Spacer</span><span class="token punctuation">(</span>
                    flex<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                  <span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token class-name">Expanded</span><span class="token punctuation">(</span>
                    flex<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
                    child<span class="token operator">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>
                      height<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
                      color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span>
                    <span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token punctuation">)</span>
                <span class="token punctuation">]</span><span class="token punctuation">,</span>
              <span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>ListView</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">ListViewTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">ListViewTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">_buildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Widget</span> <span class="token function">_buildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//ListView空间排列不下就自动滚动，支持列表懒加载</span>
    <span class="token keyword">return</span> <span class="token class-name">ListView</span><span class="token punctuation">(</span>
      children<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span><span class="token class-name">Icons</span><span class="token punctuation">.</span>theater_comedy<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">ListTile</span> <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">,</span><span class="token class-name">String</span> subtitle<span class="token punctuation">,</span> <span class="token class-name">IconData</span> icon<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ListTile</span><span class="token punctuation">(</span>
      title<span class="token operator">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>
        style<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>
          fontWeight<span class="token operator">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>w500<span class="token punctuation">,</span>
          fontSize<span class="token operator">:</span> <span class="token number">20</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      subtitle<span class="token operator">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>subtitle<span class="token punctuation">)</span><span class="token punctuation">,</span>
      leading<span class="token operator">:</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span>
        icon<span class="token punctuation">,</span>
        color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者用<code>ListView.builder</code>来创建</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">ListViewTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">ListViewTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ListTile</span> <span class="token function">_tile</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">,</span><span class="token class-name">String</span> subtitle<span class="token punctuation">,</span> <span class="token class-name">IconData</span> icon<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ListTile</span><span class="token punctuation">(</span>
      title<span class="token operator">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>
        style<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>
          fontWeight<span class="token operator">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>w500<span class="token punctuation">,</span>
          fontSize<span class="token operator">:</span> <span class="token number">20</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      subtitle<span class="token operator">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>subtitle<span class="token punctuation">)</span><span class="token punctuation">,</span>
      leading<span class="token operator">:</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span>
        icon<span class="token punctuation">,</span>
        color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ListView</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>
      itemCount<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      itemExtent<span class="token operator">:</span> <span class="token number">50.0</span><span class="token punctuation">,</span>
      itemBuilder<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ListTile</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;$index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>GridView</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">GridViewTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">GridViewTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">GridView</span><span class="token punctuation">.</span><span class="token function">extent</span><span class="token punctuation">(</span>
        maxCrossAxisExtent<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
        padding<span class="token operator">:</span> <span class="token keyword">const</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        mainAxisSpacing<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        crossAxisSpacing<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token comment">// childAspectRatio: 2,//不填默认横宽比为1:1</span>
        children<span class="token operator">:</span> <span class="token function">_buildGridTileList</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Container</span><span class="token punctuation">&gt;</span></span> <span class="token function">_buildGridTileList</span><span class="token punctuation">(</span><span class="token keyword">int</span> count<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>child<span class="token operator">:</span> <span class="token class-name">Image</span><span class="token punctuation">.</span><span class="token function">asset</span><span class="token punctuation">(</span><span class="token string">&quot;images/flutter$i.png&quot;</span><span class="token punctuation">,</span> fit<span class="token operator">:</span><span class="token class-name">BoxFit</span><span class="token punctuation">.</span>fill<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>Gesture</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">GestureTest</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">GestureTest</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token operator">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StatefulWidget</span><span class="token punctuation">&gt;</span></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">_GestureTestState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> _GestureTestState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GestureTest</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
  <span class="token class-name">String</span> _operation <span class="token operator">=</span><span class="token string">&quot;No Gesture detected!&quot;</span><span class="token punctuation">;</span><span class="token comment">//保存事件名</span>
  <span class="token annotation punctuation">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>
      child<span class="token operator">:</span> <span class="token class-name">GestureDetector</span><span class="token punctuation">(</span>
        child<span class="token operator">:</span><span class="token class-name">Container</span><span class="token punctuation">(</span>
          alignment<span class="token operator">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>
          color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span>
          width<span class="token operator">:</span> <span class="token number">200.0</span><span class="token punctuation">,</span>
          height<span class="token operator">:</span> <span class="token number">100.0</span><span class="token punctuation">,</span>
          child<span class="token operator">:</span><span class="token class-name">Text</span><span class="token punctuation">(</span>
            _operation<span class="token punctuation">,</span>
            style<span class="token operator">:</span> <span class="token class-name">TextStyle</span><span class="token punctuation">(</span>color<span class="token operator">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        onTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">updateText</span><span class="token punctuation">(</span><span class="token string">&quot;Tap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//点击</span>
        onDoubleTap<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">updateText</span><span class="token punctuation">(</span><span class="token string">&quot;DoubleTap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">//双击</span>
        onLongPress<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">updateText</span><span class="token punctuation">(</span><span class="token string">&quot;LonePress&quot;</span><span class="token punctuation">)</span><span class="token comment">//长按</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">void</span> <span class="token function">updateText</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//更新显示的事件名</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _operation<span class="token operator">=</span>text<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="flutter路由管理" tabindex="-1"><a class="header-anchor" href="#flutter路由管理" aria-hidden="true">#</a> Flutter路由管理</h2><p>Flutter中的理由管理和原生开发类似，无论是安卓还是IOS导航管理都会维护一个路由栈，路由入栈操作对应打开一个新的页面，路由出栈对应页面关闭的操作，而路由管理主要是指如何来管理路由栈。<br> Flutter中通过Navigator组件来实现路由管理，<code>Navigator</code>方法会跳转到一个新的页面，pop会回退界面并且返回数据给主屏界面，pop方法可以接受第二个参数它是可选的，如果传递这个参数，数据会通过future的方法传递返回值</p><h2 id="网络请求和序列化数据" tabindex="-1"><a class="header-anchor" href="#网络请求和序列化数据" aria-hidden="true">#</a> 网络请求和序列化数据</h2><figure><img src="`+u+`" alt="HttpClient请求网络数据" tabindex="0" loading="lazy"><figcaption>HttpClient请求网络数据</figcaption></figure><ol><li>在<code>AndroidManifest.xml</code>添加网络请求权限(在application标签之外即可)：</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.INTERNET<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="包管理工具" tabindex="-1"><a class="header-anchor" href="#包管理工具" aria-hidden="true">#</a> 包管理工具</h2><ol><li>Android使用Gradle来管理依赖</li><li>IOS使用Cocoapods来管理依赖</li><li>Node使用npm来管理依赖</li><li>flutter用yaml作为包管理工具，默认的配置文件是<code>pubspec.yaml</code></li></ol><p>如添加<code>css_colors</code>，然后点击<code>Pub get</code>：<br><img src="`+k+'" alt="" loading="lazy"><br> 下载日志：<br><img src="'+r+`" alt="" loading="lazy"></p><p>或者在<code>pubspec.yaml</code>文件里添加后<code>css_colors</code>和其对应的版本号后，在项目终端运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>flutter packages get
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用<code>css_colors</code>示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> &#39;<span class="token keyword">package</span><span class="token operator">:</span>flutter<span class="token operator">/</span>material<span class="token punctuation">.</span>dart&#39;<span class="token punctuation">;</span>
<span class="token keyword">import</span> &#39;<span class="token keyword">package</span><span class="token operator">:</span>css_colors<span class="token operator">/</span>css_colors<span class="token punctuation">.</span>dart&#39;<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">runApp</span><span class="token punctuation">(</span>
    <span class="token class-name">Container</span><span class="token punctuation">(</span>
      color<span class="token operator">:</span> <span class="token class-name">CSSColors</span><span class="token punctuation">.</span>green<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何引入dart文件" tabindex="-1"><a class="header-anchor" href="#如何引入dart文件" aria-hidden="true">#</a> 如何引入dart文件</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> &#39;<span class="token keyword">package</span><span class="token operator">:</span>你的项目名<span class="token operator">/</span>xxx<span class="token punctuation">.</span>dart&#39;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>项目名对应的是在<code>pubspec.yaml</code>可以看到，即<code>name</code>的值</p><h2 id="与原生平台通信——platform-channel" tabindex="-1"><a class="header-anchor" href="#与原生平台通信——platform-channel" aria-hidden="true">#</a> 与原生平台通信——Platform Channel</h2><figure><img src="`+d+'" alt="与原生平台通信——Platform Channel" tabindex="0" loading="lazy"><figcaption>与原生平台通信——Platform Channel</figcaption></figure><h2 id="flutter渲染原理" tabindex="-1"><a class="header-anchor" href="#flutter渲染原理" aria-hidden="true">#</a> Flutter渲染原理</h2><figure><img src="'+m+'" alt="Flutter渲染原理" tabindex="0" loading="lazy"><figcaption>Flutter渲染原理</figcaption></figure><h2 id="flutter常见优化策略" tabindex="-1"><a class="header-anchor" href="#flutter常见优化策略" aria-hidden="true">#</a> Flutter常见优化策略</h2><ul><li>提供build效率：setState刷新数据尽量下发到底层节点。</li><li>提高paint效率：可以通过RepaintBoundry创建单独的layer减少重绘区域</li><li>减少build中逻辑处理：因为Widget在页面刷新过程中，会通过build重建，会被频繁调用，尽量仅在这里处理跟UI有关的逻辑</li><li>减少Opacity使用，尤其是在动画中，因为它会导致Widget的每一帧都会被重建，可以使用AnimatedOpacity 或 FadeInImage进行代替，尽量减少它的使用。</li><li>减少ClipPath、savaLayer使用：savaLayer会在GPU分配一块新的绘图缓冲区，切换绘图目标，这个操作是十分耗时的。而ClipPath会影响每个绘图指令，做一些相交的操作，相交之外的部分会被剔除掉，这也是一个比较耗时的操作。</li></ul>',68);function g(h,f){return s(),a("div",null,[t(" more "),b])}const w=n(v,[["render",g],["__file","flutter01.html.vue"]]);export{w as default};
