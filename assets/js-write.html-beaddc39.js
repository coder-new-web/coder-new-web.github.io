import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,a,f as d}from"./app-af427ef1.js";const n={},r=d(`<h2 id="区分大小写" tabindex="-1"><a class="header-anchor" href="#区分大小写" aria-hidden="true">#</a> 区分大小写</h2><p>变量test和变量Test是两个变量</p><h2 id="变量声明不能用到关键字或保留字" tabindex="-1"><a class="header-anchor" href="#变量声明不能用到关键字或保留字" aria-hidden="true">#</a> 变量声明不能用到关键字或保留字</h2><table><thead><tr><th style="text-align:left;">变量名</th></tr></thead><tbody><tr><td style="text-align:left;">break</td></tr><tr><td style="text-align:left;">do</td></tr><tr><td style="text-align:left;">in</td></tr><tr><td style="text-align:left;">typeof</td></tr><tr><td style="text-align:left;">case</td></tr><tr><td style="text-align:left;">else</td></tr><tr><td style="text-align:left;">instanceof</td></tr><tr><td style="text-align:left;">var</td></tr><tr><td style="text-align:left;">catch</td></tr><tr><td style="text-align:left;">export</td></tr><tr><td style="text-align:left;">new</td></tr><tr><td style="text-align:left;">void</td></tr><tr><td style="text-align:left;">class</td></tr><tr><td style="text-align:left;">extends</td></tr><tr><td style="text-align:left;">return</td></tr><tr><td style="text-align:left;">while</td></tr><tr><td style="text-align:left;">const</td></tr><tr><td style="text-align:left;">finally</td></tr><tr><td style="text-align:left;">super</td></tr><tr><td style="text-align:left;">with</td></tr><tr><td style="text-align:left;">continue</td></tr><tr><td style="text-align:left;">for</td></tr><tr><td style="text-align:left;">switch</td></tr><tr><td style="text-align:left;">yield</td></tr><tr><td style="text-align:left;">debugger</td></tr><tr><td style="text-align:left;">function</td></tr><tr><td style="text-align:left;">this</td></tr><tr><td style="text-align:left;">default</td></tr><tr><td style="text-align:left;">if</td></tr><tr><td style="text-align:left;">throw</td></tr><tr><td style="text-align:left;">delete</td></tr><tr><td style="text-align:left;">import</td></tr><tr><td style="text-align:left;">try</td></tr></tbody></table><p>以下是 ECMA-262 第 6 版为将来保留的所有词汇：</p><table><thead><tr><th style="text-align:left;">变量名</th></tr></thead><tbody><tr><td style="text-align:left;">enum</td></tr></tbody></table><p>严格模式下保留:</p><table><thead><tr><th style="text-align:left;">变量名</th></tr></thead><tbody><tr><td style="text-align:left;">implements</td></tr><tr><td style="text-align:left;">package</td></tr><tr><td style="text-align:left;">public</td></tr><tr><td style="text-align:left;">interface</td></tr><tr><td style="text-align:left;">protected</td></tr><tr><td style="text-align:left;">static</td></tr><tr><td style="text-align:left;">let</td></tr><tr><td style="text-align:left;">private</td></tr></tbody></table><p>模块代码中保留:</p><table><thead><tr><th style="text-align:left;">变量名</th></tr></thead><tbody><tr><td style="text-align:left;">await</td></tr></tbody></table><h2 id="标识符" tabindex="-1"><a class="header-anchor" href="#标识符" aria-hidden="true">#</a> 标识符</h2><ul><li>第一个字符必须是一个字母、下划线（_）或美元符号（$）</li><li>剩下的其他字符可以是字母、下划线、美元符号或数字。</li><li>按照惯例，ECMAScript 标识符使用驼峰大小写形式，即第一个单词的首字母小写，后面每个单词的首字母大写，如：<br><code>firstSecond</code>、<code>myCar</code>、<code>doSomethingImportant</code></li></ul><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//单行注释</span>
<span class="token comment">/*
    多行
    注释
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="严格模式" tabindex="-1"><a class="header-anchor" href="#严格模式" aria-hidden="true">#</a> 严格模式</h2><ol><li>全局开启，就在文件头加入<code>&quot;use strict&quot;;</code></li><li>局部开启，如在函数内开启：</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
 <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span> 
 <span class="token comment">// 函数体 </span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function s(i,c){return e(),l("div",null,[a(" more "),r])}const g=t(n,[["render",s],["__file","js-write.html.vue"]]);export{g as default};
