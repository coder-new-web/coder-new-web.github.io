import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c as o,b as n,d as s,e as c,f as i}from"./app-af427ef1.js";const l={},u=n("h2",{id:"什么是puppeteer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是puppeteer","aria-hidden":"true"},"#"),s(" 什么是Puppeteer")],-1),r={href:"https://pptr.dev/",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="puppeteer能做什么" tabindex="-1"><a class="header-anchor" href="#puppeteer能做什么" aria-hidden="true">#</a> Puppeteer能做什么</h2><ul><li>生成页面的屏幕截图和 PDF。</li><li>抓取 SPA（单页应用程序）并生成预渲染内容（“SSR”（服务器端渲染））。</li><li>自动执行表单提交、UI 测试、键盘输入等操作。</li><li>创建最新的自动化测试环境。使用最新的 JavaScript 和浏览器功能直接在最新版本的 Chrome 中运行测试。</li><li>捕获站点的时间线跟踪以帮助诊断性能问题。</li><li>测试 Chrome 扩展。</li></ul><h2 id="安装puppeteer" tabindex="-1"><a class="header-anchor" href="#安装puppeteer" aria-hidden="true">#</a> 安装Puppeteer</h2><p>在项目中使用Puppeteer</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在 v1.18.1 之前，Puppeteer 至少需要 Node v6.4.0。从 v1.18.1 到 v2.1.0 的版本依赖于 Node 8.9.0+。从 v3.0.0 开始，Puppeteer 开始依赖 Node 10.18.1+。下面的所有示例都使用仅在 Node v7.6.0 或更高版本中受支持的 async/await。</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i puppeteer
<span class="token comment"># or &quot;yarn add puppeteer&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当您安装 Puppeteer 时，它会下载最新版本的 Chromium（~170MB Mac，~282MB Linux，~280MB Win）保证与 API 一起工作。要跳过下载、下载到另一个路径或下载不同的浏览器，请参阅环境变量。</p></div><h2 id="puppeteer-core" tabindex="-1"><a class="header-anchor" href="#puppeteer-core" aria-hidden="true">#</a> puppeteer-core</h2><p>从 1.7.0 版本开始，我们发布了 puppeteer-core 包，这是一个默认不下载任何浏览器的 Puppeteer 版本。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i puppeteer-core
<span class="token comment"># or &quot;yarn add puppeteer-core&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>puppeteer-core</code> 旨在成为 Puppeteer 的轻量级版本，用于启动现有浏览器安装或连接到远程浏览器。</p><p>确保您安装的 <code>puppeteer-core</code> 版本与您打算连接的浏览器兼容。</p><h2 id="指定页面截图" tabindex="-1"><a class="header-anchor" href="#指定页面截图" aria-hidden="true">#</a> 指定页面截图</h2><p>下面所有示例都建议直接搭建node项目运行：</p><ol><li>创建文件夹</li><li><code>npm init</code></li><li><code>npm i puppeteer</code></li><li>新建<code>screenShot.js</code>文件</li><li>编写以下代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;puppeteer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//Puppeteer 将初始页面大小设置为 800×600px，它定义了屏幕截图大小。可以使用 Page.setViewport() 自定义页面大小。</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setViewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token comment">//页面宽度</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">720</span><span class="token punctuation">,</span> <span class="token comment">//页面高度</span>
    <span class="token literal-property property">deviceScaleFactor</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//指定设备比例因子（可以认为是 DPR）。默认为 1 。</span>
    <span class="token comment">// isMobile: false,//是否考虑元视口标签，默认为false</span>
    <span class="token comment">// hasTouch: false, //指定视口是否支持触摸事件。默认为 false</span>
    <span class="token comment">// isLandScape: false, //指定视口是否处于横向模式。默认为false。</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&quot;https://baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;baidu_screenShoot.png&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>运行js文件，<code>node screenShot.js</code></li><li>根目录下就可看到名为<code>baidu_screenShoot.png</code>截图</li></ol><h2 id="指定页面生成pdf" tabindex="-1"><a class="header-anchor" href="#指定页面生成pdf" aria-hidden="true">#</a> 指定页面生成pdf</h2><ol><li>新建<code>pdf.js</code></li><li>在该文件编写以下代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;puppeteer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//生成pdf更多配置参数https://pptr.dev/api/puppeteer.pdfoptions</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&quot;https://news.ycombinator.com&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&quot;networkidle2&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">pdf</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;website.pdf&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&quot;a4&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>运行js文件，<code>node pdf.js</code></li><li>根目录下就可看到名为<code>website.pdf</code>pdf</li></ol><h2 id="在页面上下文中评估脚本" tabindex="-1"><a class="header-anchor" href="#在页面上下文中评估脚本" aria-hidden="true">#</a> 在页面上下文中评估脚本</h2><ol><li>新建<code>evalScript.js</code>文件</li><li>在该文件编写以下代码</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;puppeteer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&quot;https://baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> dimensions <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token literal-property property">deviceScaleFactor</span><span class="token operator">:</span> window<span class="token punctuation">.</span>devicePixelRatio<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Dimensions:&quot;</span><span class="token punctuation">,</span> dimensions<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>执行该文件，<code>node evalScript.js</code></li><li>打印结果为：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>deviceScaleFactor 指的是指定设备比例因子（可以认为是 DPR）
Dimensions: { width: 800, height: 600, deviceScaleFactor: 1 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,26);function k(v,m){const a=p("ExternalLinkIcon");return t(),o("div",null,[u,n("p",null,[s("Puppeteer是一个Node库，它提供了一个高级API来通过DevTools Protocol控制无头的Chrome或Chromium。它还可以配置为使用完整（非无头）Chrome或Chromium。"),n("a",r,[s("官网链接"),c(a)])]),d])}const w=e(l,[["render",k],["__file","puppeteer.html.vue"]]);export{w as default};
