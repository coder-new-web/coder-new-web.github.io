import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as u,e as a,w as e,b as n,d as s,f as p}from"./app-af427ef1.js";const r={},k=p('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>浏览器允许JS读写剪贴板，自动复制或粘贴内容。用处就是“一键复制”啦。<br> 目前，一共有三种方法可以实现剪贴板操作：</p><ul><li><code>Document.execCommand()</code>方法</li><li>异步的<code>Clipboard API</code></li><li>copy是事件和paste事件</li></ul><p>本文将介绍这三种方法。</p><h2 id="document-execcommand-方法" tabindex="-1"><a class="header-anchor" href="#document-execcommand-方法" aria-hidden="true">#</a> Document.execCommand()方法</h2><p>当一个HTML文档切换到设计模式时，<code>document</code>暴露<code>execCommand</code>方法，该方法允许允许命令来操纵可编辑内容区域的元素。</p>',6),d=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"contenteditable"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("true"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("双击我可以开始编辑！！！"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),m={class:"hint-container warning"},v=n("p",{class:"hint-container-title"},"注意",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/execCommand",target:"_blank",rel:"noopener noreferrer"},g=p(`<h2 id="clipboard-api" tabindex="-1"><a class="header-anchor" href="#clipboard-api" aria-hidden="true">#</a> Clipboard API</h2><p>Clipboard API是下一代的剪贴板操作方法，比传统的<code>document.execCommand()</code>方法更强大、更合理。<br> 它的所有操作都是异步的，返回Promise对象，不会造成页面卡顿。而且，它可以将任意内容（比如图片）放入剪贴板。<br><code>navigator.clipboard</code>属性返回 Clipboard 对象，所有操作都通过这个对象进行。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> clipboardObj <span class="token operator">=</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若<code>navigator.clipboard</code>属性返回<code>undefined</code>，就说明当前浏览器不支持这个API。<br> 由于用户可能把敏感数据（比如密码）放在剪贴板，允许脚本任意读取会产生安全风险，因此这个API的安全限制也比较多。<br> 首先，chrome浏览器规定，只有HTTPS协议的页面才能使用这个API。不过，开发环境（<code>localhost</code>）允许使用非加密协议。<br> 其次，调用时需要明确获得用户的许可。权限的具体实现使用了Permissions API，跟剪贴板相关的有两个权限：<code>clipboard-write</code>（写权限）和<code>clipboard-read</code>（读权限）。“写权限”自动授予脚本，而“读权限”必须用户明确同意给予。也就是说，写入剪贴板，脚本可以自动完成。但是读取剪贴板时，浏览器会弹出对话框，询问用户是否同意读取。</p><h3 id="clipboard-对象" tabindex="-1"><a class="header-anchor" href="#clipboard-对象" aria-hidden="true">#</a> Clipboard 对象</h3><p>Clipboard对象提供了四个方法，用来读取剪贴板。他们都是异步方法，返回promise对象。</p><h4 id="clipboard-readtext" tabindex="-1"><a class="header-anchor" href="#clipboard-readtext" aria-hidden="true">#</a> Clipboard.readText()</h4><p><code>Clipboard.readText()</code>方法用于复制剪贴板里面的文本数据。</p>`,8),y=n("div",{class:"language-css line-numbers-mode","data-ext":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},"#clipboardContent"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s(" 300px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 200px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"border"),n("span",{class:"token punctuation"},":"),s(" 2px solid #333"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"onclick"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value javascript language-javascript"},[n("span",{class:"token function"},"getClipboardContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},'"')])]),n("span",{class:"token punctuation"},">")]),s("点击获取剪贴板中内容"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("clipboardContent"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" clipboardContent "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelector"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"#clipboardContent"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"getClipboardContent"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},'// navigator.permissions.query({ name: "clipboard-read" })promise返回result，可用于判断是否授权获取剪贴板内容权限'),s(`
  navigator`),n("span",{class:"token punctuation"},"."),s("permissions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"clipboard-read"'),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token parameter"},"result"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},"."),s("state "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"granted"'),s(),n("span",{class:"token operator"},"||"),s(" result"),n("span",{class:"token punctuation"},"."),s("state "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"prompt"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"const"),s(" text "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" navigator"),n("span",{class:"token punctuation"},"."),s("clipboard"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readText"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("text"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        clipboardContent`),n("span",{class:"token punctuation"},"."),s("innerText "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"剪贴板内容为：\\n"'),s(),n("span",{class:"token operator"},"+"),s(" text"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
        clipboardContent`),n("span",{class:"token punctuation"},"."),s("innerText "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"剪贴板内无内容"'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      clipboardContent`),n("span",{class:"token punctuation"},"."),s("innerText "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"未授权获取剪贴板权限，请在弹框中选择允许再点击获取剪贴板内容按钮。"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=p(`<p>上面示例中，用户点击页面后，就会输出剪贴板里面的文本。注意，浏览器这时会跳出一个对话框，询问用户是否同意脚本读取剪贴板。</p><p>如果用户不同意，脚本就会报错。这时，可以使用try...catch结构，处理报错，或像上述代码查看是否有权限。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getClipboardContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">readText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Pasted content: &#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to read clipboard contents: &#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="clipboard-read" tabindex="-1"><a class="header-anchor" href="#clipboard-read" aria-hidden="true">#</a> Clipboard.read()</h4><p><code>Clipboard.read()</code>方法用于复制剪贴板里面的数据，可以是<mark>文本数据</mark>，也可以是<mark>二进制数据（比如图片）</mark>。该方法需要用户明确给予许可。</p><p>该方法返回一个 Promise 对象。一旦该对象的状态变为 resolved，就可以获得一个数组，每个数组成员都是 ClipboardItem 对象的实例。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getClipboardContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> clipboardItems <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//只能是文本数据或者是二进制数据，直接复制文件夹或图片就会报错</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> clipboardItem <span class="token keyword">of</span> clipboardItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> type <span class="token keyword">of</span> clipboardItem<span class="token punctuation">.</span>types<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> clipboardItem<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>name<span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ClipboardItem</code> 对象表示一个单独的剪贴项，每个剪贴项都拥有<code>ClipboardItem.types</code>属性和<code>ClipboardItem.getType()</code>方法。</p><p><code>ClipboardItem.types</code>属性返回一个数组，里面的成员是该剪贴项可用的 MIME 类型，比如某个剪贴项可以用 HTML 格式粘贴，也可以用纯文本格式粘贴，那么它就有两个 MIME 类型（<code>text/html</code>和<code>text/plain</code>）。</p><p><code>ClipboardItem.getType(type)</code>方法用于读取剪贴项的数据，返回一个 Promise 对象。该方法接受剪贴项的 MIME 类型作为参数，返回该类型的数据，该参数是必需的，否则会报错。</p><h4 id="clipboard-writetext" tabindex="-1"><a class="header-anchor" href="#clipboard-writetext" aria-hidden="true">#</a> Clipboard.writeText()</h4><p><code>Clipboard.writeText()</code>方法用于将文本内容写入剪贴板。</p>`,12),x=n("div",{class:"language-css line-numbers-mode","data-ext":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},"#clipboardContent"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s(" 300px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 200px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"border"),n("span",{class:"token punctuation"},":"),s(" 1px solid pink"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("clipboardContent"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"contenteditable"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("true"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s("我是一段很多很多的文字。"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"onclick"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value javascript language-javascript"},[n("span",{class:"token function"},"getClipboardContents"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},'"')])]),n("span",{class:"token punctuation"},">")]),s("一键复制"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" div "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelector"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"#clipboardContent"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"getClipboardContents"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"await"),s(" navigator"),n("span",{class:"token punctuation"},"."),s("clipboard"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"writeText"),n("span",{class:"token punctuation"},"("),s("div"),n("span",{class:"token punctuation"},"."),s("outerText"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"alert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"复制成功！你还可以修改内容中的问题再点击一键复制按钮"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"error"),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("name"),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},"."),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("p",null,"上面示例是用户在点击一键复制按钮后，框框里的文字就会在剪贴板里，同时用户可以双击框框里的文字修改，再点击一键复制按钮查看剪贴板内的内容是否修改。",-1),_=n("h4",{id:"clipboard-write",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#clipboard-write","aria-hidden":"true"},"#"),s(" Clipboard.write()")],-1),j=n("p",null,[n("code",null,"Clipboard.write()"),s("方法用于将任意数据写入剪贴板，可以是文本数据，也可以是二进制数据。")],-1),B=n("p",null,"该方法接受一个 ClipboardItem 实例作为参数，表示写入剪贴板的数据。",-1),T=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"注意"),n("p",null,"注意，Chrome 浏览器目前只支持写入 PNG 格式的图片。")],-1),A=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("button")]),s(),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"onclick"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value javascript language-javascript"},[n("span",{class:"token function"},"getClipboardContents"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),n("span",{class:"token punctuation"},'"')])]),n("span",{class:"token punctuation"},">")]),s("一键获取图片"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("button")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"getClipboardContents"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"async"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" imgURL "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"https://dummyimage.com/300.png"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" data "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token function"},"fetch"),n("span",{class:"token punctuation"},"("),s("imgURL"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" blob "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"await"),s(" data"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"blob"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"await"),s(" navigator"),n("span",{class:"token punctuation"},"."),s("clipboard"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"write"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s(`
      `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ClipboardItem"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token punctuation"},"["),s("blob"),n("span",{class:"token punctuation"},"."),s("type"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},":"),s(" blob"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"alert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"复制成功，window下你可以按win + v查看剪贴板历史，但如果是第一次按win+v，相当于开启剪贴板历史，需要再点击一次"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"alert"),n("span",{class:"token punctuation"},"("),s("err"),n("span",{class:"token punctuation"},"."),s("name"),n("span",{class:"token punctuation"},","),s(" err"),n("span",{class:"token punctuation"},"."),s("message"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=p(`<p>上面示例中，脚本向剪贴板写入了一张图片。</p><p><code>ClipboardItem()</code>是浏览器原生提供的构造函数，用来生成<code>ClipboardItem</code>实例，它接受一个对象作为参数，该对象的键名是数据的 MIME 类型，键值就是数据本身。</p><p>下面的例子是将同一个剪贴项的多种格式的值，写入剪贴板，一种是文本数据，另一种是二进制数据，供不同的场合粘贴使用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://dummyimage.com/300.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Cute sleeping kitten&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClipboardItem</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token string-property property">&#39;text/plain&#39;</span><span class="token operator">:</span> text<span class="token punctuation">,</span>
    <span class="token string-property property">&#39;image/png&#39;</span><span class="token operator">:</span> image
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="copy事件-cut事件" tabindex="-1"><a class="header-anchor" href="#copy事件-cut事件" aria-hidden="true">#</a> copy事件，cut事件</h2><p>用户向剪贴板放入数据时，将触发<code>copy</code>事件。</p><p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> source <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.source&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

source<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;copy&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> selection <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  event<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;text/plain&#39;</span><span class="token punctuation">,</span> selection<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，事件对象的<code>clipboardData</code>属性包含了剪贴板数据。它是一个对象，有以下属性和方法：</p><ul><li>Event.clipboardData.setData(type, data)：修改剪贴板数据，需要指定数据类型。</li><li>Event.clipboardData.getData(type)：获取剪贴板数据，需要指定数据类型。</li><li>Event.clipboardData.clearData([type])：清除剪贴板数据，可以指定数据类型。如果不指定类型，将清除所有类型的数据。</li><li>Event.clipboardData.items：一个类似数组的对象，包含了所有剪贴项，不过通常只有一个剪贴项。</li></ul><p>下面的示例是拦截用户的复制操作，将指定内容放入剪贴板：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> clipboardItems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;copy&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> clipboardItems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> e<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span>items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>item<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;image/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      clipboardItems<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">ClipboardItem</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token punctuation">[</span>item<span class="token punctuation">.</span>type<span class="token punctuation">]</span><span class="token operator">:</span> item<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>clipboardItems<span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Image copied.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>name<span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面示例中，先使用<code>e.preventDefault()</code>取消了剪贴板的默认操作，然后由脚本接管复制操作。</p><p>cut事件则是在用户进行剪切操作时触发，它的处理跟<code>copy</code>事件完全一样，也是从<code>Event.clipboardData</code>属性拿到剪切的数据。</p><h2 id="paste事件" tabindex="-1"><a class="header-anchor" href="#paste事件" aria-hidden="true">#</a> paste事件</h2><p>用户使用剪贴板数据，进行粘贴操作时，会触发<code>paste</code>事件。<br> 下面的示例是拦截粘贴操作，由脚本将剪贴板里面的数据取出来。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;paste&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">readText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Pasted text: &#39;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function P(U,N){const t=o("CodeDemo"),c=o("ExternalLinkIcon");return i(),u("div",null,[k,a(t,{id:"code-demo-32",type:"normal",title:"%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81",code:"eJyrVsooyc1RslKyScksU0jOzytJBaKUzJLEpJxU2xilkqLS1Bglu6f9PU/bdz/rmPi0f/2T3Uuf7ml4urz7+Z5pL/ZNfL+nEYJs9IFG2MXkKdUCAH8hKuo="},{default:e(()=>[d]),_:1}),n("div",m,[v,n("p",null,[s("根据MDN对"),n("a",b,[s("execCommand"),a(c)]),s("的描述，已不再推荐使用该特性，虽然一些浏览器仍然可以支持它，但也许已从相关的web标准中移除，也许正准备移除或处于兼容性而保留。尽量不要使用该特性，并更新现有的代码。该特性随时可能无法正常工作。故本篇文章不对此方法做过多介绍。")])]),g,a(t,{id:"code-demo-62",type:"normal",title:"%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B",code:"eJydk89O20AQxl9ltVwctXVQc0uTXHiE9rgXx97G2zpr195AULBEqUiJSgOqEP0HVStVFUUiuSCR0Eg8TLMmOfEKnWWpG5lIlThYsmZ2fvPNN7stbEcRLuIF22NB1bdCZ8nngnKBWoQjtMIc4RZRYXExaD5SAZeymiuK6GEaqfqhQ0OIBE0U+R5z0EKhUIBUTDi+j11R94BfqjaE8DnyOTSyn5cJrlGxlOlp5AiuXG4M5etfk+6Z3NmXnePJ6WlyeDEenMj2puwNS3kNqhBectgyYg6gstqBUspDFg6BgmdqPtvnkUC3hiwjx7cbdfg1XzRouPqYetQWfmiQ244QnIOpNGiOeGAZOVSuaOPyecStZVazAGYGNKyzKGJQqtsYLcjWaRHNaH8QUsshGMW5IPThOJ1c7MnPX0IaNTxxNdqWO/3LvaPxeVdufU/2T5IPfbn7I+luJYevMmZppyA+/birtNxZiClcyg0rWuU20jrS+RBiT5Ghg2YkLEFRuQyUWmiBG6p8be2mZjatRguUk38pCGlDBW0qB60Vi4kZwakoU4l6AocMtQRdqRSoOtOjvCbcGSZQM9sxGec0VADoQnDGq/Hg/Gr0iRAOuu9da0mbxIh6Eb0jOnn/VTcg+B9Q/2S5/6EmB8dzd623DNdj0j+TB0dyNEy+teG1TNc7yZufcvPlpDeQ7bdzH9XNPdnuTN/1fq9vpBqvFcbK5xg+HP8BFJa9xg=="},{default:e(()=>[y,h,w]),_:1}),f,a(t,{id:"code-demo-99",type:"normal",title:"%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B",code:"eJxtUs1u00AQfpXRcnGkyi1wC0kufQQ4+rKxR/FSZzesx02iKlKpoA2Iih9VNOoFhMqx7gnUqEAfBq9LTrwCY9xWVdvLaHZ2v5/5tBsiTFPRFPfCRA26Rtpo1WhCTbARaIChiihuwsOVlcHoUTWIUfViasKDq0nX2AhtE+4PRpCaREUwUHqNryaBFksipn7C/K1IrYOK2oG4KRQICOsOI0WymyA/IpthIDrl9H05Oy5ONsv8m/s1dYcHdT0/eFF+3HFH+783t1rLTN0JdKubERkNRrNCuMYkPaTVG2Kp12BaJlzs5e5w102/t5ZrHDOw26dVFmwnJagMtyEyYdZnoP8sQzt+jAmGZKwX3A4sEA1eusbepcxkMh3rELwGtDt1vGTHdQMgh1IRaLmuepIV/Ct6f2gV4RMckceWfJMR2upUqf0HJmiJDdXrlNN37vWnvz+eFz8//zmbubfHxenX4iwv9+Zu+6XL58XJEae32M8XX2Zue/d8a+52Tq8HUr55tfiQ19sATCCUFMbgobWNS6/VkiZBn2ecBVdfyz4uQdX1MU1lDy/Q/Au4EZN/W9wC1g=="},{default:e(()=>[x,C,E]),_:1}),I,_,j,B,T,a(t,{id:"code-demo-121",type:"normal",title:"%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B",code:"eJxtUU9LG0Ec/So/5rSLYSP0lppcPBV6KvTkeJhspuu2OzNhd8wSJJB6iKZqIrSUgmltoXoooYEibVpN/TI7u/HkV3DWSYKic3q8ee/9/m2hDckCVEIr1U0pBQfB3cB335Qx8qhcDfx6VZCwtiq4pFxGlo1RJRm3rz78nPb+qP5HdfQ/6+6sFI27gjkqoNeRznMFjyQ8lgFlIFGTu2DZUK7AFuYAMmwaAGCMPvNevniupVg3KOtRqVisbTLW9BnxqOMKVnyyvOzUuYfR07u+GpEkLxATX8IrKt0Ny0TZ92TVQFQXstzj5Iw1Fxmek4bvESlCR6/EzODEoS+ptWZkAJzGsBjwmaTMmk2Rv7U805HNOl0v3VYszP9a9gyuLyoGNJQWRur7gdr9ne4eqnfH1xf7sc9rIk7Ge8nkq+qPkvOTdL+rSViCRnp8kg32VPfH9Ows/Xypeh3V/6U9yaSjTrfTL4P00ygbDvW10uE3Y1tq6P/saKwm75N/PXXRVoejhwFXg/b09K3qHGTbf9XOuQnAyLTaApforYJFw9Ce38x0rxmHE0YLkCNGo0jfaubCvKUBat0At4AGvg=="},{default:e(()=>[A,q]),_:1}),D])}const G=l(r,[["render",P],["__file","clipboard-api.html.vue"]]);export{G as default};
