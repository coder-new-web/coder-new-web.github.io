import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,f as e}from"./app-af427ef1.js";const p={},t=e(`<h2 id="预渲染" tabindex="-1"><a class="header-anchor" href="#预渲染" aria-hidden="true">#</a> 预渲染</h2><h2 id="同构" tabindex="-1"><a class="header-anchor" href="#同构" aria-hidden="true">#</a> 同构</h2><h2 id="ssr" tabindex="-1"><a class="header-anchor" href="#ssr" aria-hidden="true">#</a> SSR</h2><p>服务端渲染也可以解决首屏加载慢这个问题，因为服务端会把所有数据全部渲染完成再返回给客户端</p><p>ssr =&gt;请求-&gt;node-&gt;解析 -&gt;吐回给客户端(带请求数据)</p><p>但是有一个大问题，重要的是node层，高并发的解决</p><h2 id="路由懒加载" tabindex="-1"><a class="header-anchor" href="#路由懒加载" aria-hidden="true">#</a> 路由懒加载</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;about&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/AboutView.vue&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="quicklink" tabindex="-1"><a class="header-anchor" href="#quicklink" aria-hidden="true">#</a> quicklink</h2><p>quicklink就是在浏览器空闲的时候去指定需要加载的数据,这个是谷歌开源的，</p><h2 id="使用gzip压缩" tabindex="-1"><a class="header-anchor" href="#使用gzip压缩" aria-hidden="true">#</a> 使用Gzip压缩</h2><p>减少文件体积，加快首屏页面打开速度</p><p>前提是服务器那边得开启gzip</p><p>前端需要做的事：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i compression-webpack-plugin <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>vue.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> CompressionPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;compression-webpack-plugin&quot;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token keyword">new</span> <span class="token class-name">CompressionPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$|\\.html$|\\.css$|\\.jpg$|\\.jpeg$|\\.png</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 需要压缩的文件类型</span>
            <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span> <span class="token comment">// 归档需要进行压缩的文件大小最小值，我这个是10K以上的进行压缩</span>
            <span class="token literal-property property">deleteOriginalAssets</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否删除原文件</span>
            <span class="token literal-property property">minRatio</span><span class="token operator">:</span> <span class="token number">0.8</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sourcemap" tabindex="-1"><a class="header-anchor" href="#sourcemap" aria-hidden="true">#</a> sourcemap</h2><p>打包的时候不生成sourcemap文件，进而减小包体积</p><h2 id="外链css、js文件" tabindex="-1"><a class="header-anchor" href="#外链css、js文件" aria-hidden="true">#</a> 外链css、js文件</h2><p>很多时候我们在main.js中直接import一些ui库或者css文件啥的，以后可以在index.html，通过script外链引入，这样就不会通过我们的webpack打包。</p><h2 id="webpack-entry" tabindex="-1"><a class="header-anchor" href="#webpack-entry" aria-hidden="true">#</a> webpack entry</h2><p>这个就是将单页改成多页应用,比如一些组件中，vue.js vue-router等插件已经在某个页面使用了，然后给它缓存起来，下次就无需加载。</p><h2 id="使用cdn加速" tabindex="-1"><a class="header-anchor" href="#使用cdn加速" aria-hidden="true">#</a> 使用cdn加速</h2><h2 id="打包文件分包-提取公共文件包" tabindex="-1"><a class="header-anchor" href="#打包文件分包-提取公共文件包" aria-hidden="true">#</a> 打包文件分包，提取公共文件包</h2><h2 id="骨架屏" tabindex="-1"><a class="header-anchor" href="#骨架屏" aria-hidden="true">#</a> 骨架屏</h2><p>骨架屏就是在进入项目的FP阶段，给它来一个类似轮廓的东西，当我们的页面加载完成之后就消失。</p><h2 id="loading" tabindex="-1"><a class="header-anchor" href="#loading" aria-hidden="true">#</a> loading</h2><p>首页加一个loading，在index.html里加一个loadingcss效果，当页面加载完成消失</p>`,29),i=[t];function o(c,r){return a(),s("div",null,i)}const u=n(p,[["render",o],["__file","how-to-solve-the-problem-of-loading-a-white-screen-on-the-homepage.html.vue"]]);export{u as default};
