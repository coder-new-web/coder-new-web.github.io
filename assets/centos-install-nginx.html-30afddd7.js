import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as s,a as t,b as n,d as e,e as d,w as a,f as r}from"./app-af427ef1.js";const l="/assets/press-y-f7164104.png",g="/assets/show-nginx-version-0a584fd0.png",x="/assets/safe-hoot-92a0d5a1.png",u="/assets/fast-add-b1806750.png",m={},h=n("p",null,"通过此文章，你将学会如何在服务器为Centos下安装nginx。",-1),b=r('<h2 id="安装编译nginx依赖" tabindex="-1"><a class="header-anchor" href="#安装编译nginx依赖" aria-hidden="true">#</a> 安装编译Nginx依赖</h2><p><strong>1、安装gcc</strong></p><p>安装Nginx需要先将官网下载的源码进行编译，编译依赖gcc环境，如果没有gcc环境，则需要安装：</p><p><code>yum install gcc-c++</code></p><p>不然可能就会报错：<code>Invalid C++ compiler or C++ compiler flags.</code></p><p>中途可能会让你选择<code>y/n</code>，按<code>y</code>后回车即可。</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>2、PCRE pcre-devel安装</strong></p><p>PCRE是一个（Perl Compatible Regular Expressions）是一个Perl库，包括perl兼容的正则表达式。nginx的http模块使用pcre来解析正则表达式，所以需要在linux上安装pcre库，pcre-devel是使用pcre开发的一个二次开发库。nginx也需要此库。命令：</p><p><code>yum install -y pcre pcre-devel</code></p><p>不然可能报错：<code>the HTTP rewrite module requires the PCRE library.</code></p><p><strong>3、zlib安装</strong></p><p>zlib库提供了很多种压缩喝解压缩的方式，nginx使用zlib对http包的内容进行gzip，所以需要在Centos上安装zlib库。</p><p><code>yum install -y zlib zlib-devel</code></p><p>不然可能报错：<code>the HTTP gzip module requires the zlib library.</code></p><p><strong>4、OpenSSL安装</strong></p><p>OpenSSL是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。</p><p>nginx不仅支持http协议，还支持https（即在ssl协议上传输http），所以需要在Centos安装OpenSSL库。</p><p><code>yum install -y openssl openssl-devel</code></p><h2 id="下载安装运行nginx" tabindex="-1"><a class="header-anchor" href="#下载安装运行nginx" aria-hidden="true">#</a> 下载安装运行Nginx</h2><p><strong>1、下载Nginx</strong></p><p><code>wget https://nginx.org/download/nginx-1.19.9.tar.gz</code></p><p><strong>2、解压Nginx</strong></p><p><code>tar -zxvf nginx-1.19.9.tar.gz</code></p><p><strong>3、执行configure文件</strong></p><p><code>cd nginx-1.19.9 &amp;&amp; ./configure</code></p><p><strong>4、make命令编译</strong><br> 执行完后会有一个MakeFile文件</p><p>make是一个命令工具，它解释MakeFile中的指令（应该说是规则）。在Makefile文件中描述了整个工程所有文件的编译顺序、编译规则。</p><p><code>make</code></p><p><code>make install</code></p><p><strong>5、查询Nginx安装目录</strong></p><p><code>whereis nginx</code></p><p><strong>6、执行Nginx</strong></p><p>根据以上方法进入Nginx安装路径，参考路径：<code>/usr/local/nginx</code></p><p>进入sbin文件：<code>cd sbin</code></p><p>执行Nginx：<code>./nginx</code></p><p><strong>7、关于Nginx更多命令在Centos下的命令</strong></p><ul><li>关于命令输入<br> 如果你是在<code>/usr/local/nginx</code>目录下，启动Nginx的命令为：<code>./sbin/nginx</code></li></ul><p>但是如果是在<code>/usr/local/nginx/sbin</code>目录下，启动Nginx的命令为：<code>./nginx</code></p><p>由此可见，有没有<code>sbin</code>取决于你在哪一级的目录</p><ul><li><p>查看nginx是否运行成功<br><code>ps -ef | grep nginx</code></p></li><li><p>维护命令<br><code>cd /usr/local/nginx</code>——进入安装路径</p></li></ul><p><code>./sbin/nginx</code>——启动命令</p><p><code>./sbin/nginx -s reload</code>——重载</p><p><code>./sbin/nginx -s stop</code>——关闭</p><p><code>./sbin/nginx -s quit</code>——优雅关闭（当请求被处理完成之后才关闭）</p><p><strong>8、配置Nginx环境变量</strong></p><p>上一步骤可以看到，<code>./路径名/路径名</code>非常的繁琐，但我们可以通过环境变量来配置一下，使得我们可以像在window下使用命令，如<code>nginx -s reload</code>——重载配置文件、<code>nginx -s quit</code>——优雅地停止、<code>nginx -v</code>——查看版本号。</p><p>而且这个命令的使用不管你在哪个路径下都可以使用</p><ol><li>回到根目录：<code>cd /</code>，打开环境变量配置文件：<code>vim profile</code>，</li><li>添加环境变量：<code>export PATH=$PATH:/usr/local/nginx/sbin</code>，然后按<code>esc</code>退出编辑模式，按<code>:wq</code>保存并推出预览模式</li><li>重新加载环境变量：<code>source profile</code></li><li>此时你再输入<code>nginx -V</code>，如果显示版本号，说明环境变量已经生效了。<br><img src="'+g+`" alt="" loading="lazy"></li></ol><p>注意点：虽然我这里的环境变量是<code>export PATH=$PATH:/usr/local/nginx/sbin</code>，因为这是我的nginx安装路径下的sbin文件夹里面，实际路径要看你安装的路径在哪里，也可能你不是安装的默认路径，此时环境变量这里的路径需要灵活变动。</p><p><strong>9、多个环境变量</strong></p><p><code>export PATH=$PATH:/node-v14.19.1-linux-x64/bin:/usr/local/nginx/sbin</code></p><p>修改完环境变量记得运行<code>source profile</code>重新加载环境变量配置文件。</p><p>此时<code>nginx -v</code>即可打印出nginx的版本号</p><h2 id="yum404解决方案" tabindex="-1"><a class="header-anchor" href="#yum404解决方案" aria-hidden="true">#</a> yum404解决方案</h2><p>该情况可能出现在Centos7，而Centos 8应该是不会出现的，如果出现了可以安装下面的方式试试：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 进入配置文件夹</span>
cd <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>
<span class="token comment">// 删除旧的配置文件</span>
rm <span class="token operator">*</span><span class="token punctuation">.</span>repo
<span class="token comment">// 输入“y”回车确认</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用ls命令确保该目录下的.repo文件已完全删除</p><p>下载可以用的.repo文件</p><p><code>wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</code></p><p>如果你没有安装wget，也可以用下面的命令：</p><p><code>curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</code></p><p>运行yum makecache生成缓存</p><p><code>yum makecache</code></p><p><strong>10、访问我们的页面</strong></p><p>通过上述步骤，相信你已经学会学会安装nginx和启动nginx了，这一步，将让你可以在你的电脑上，通过公网IP地址或域名访问我们的页面。</p><p>注：默认安装好后，nginx里面的html文件夹下是有两个文件的。方便我们验证nginx是否启动成功。</p><p>当你成功启动nginx后，上面也说到了，访问页面可以在本机通过公网IP地址或域名访问到我们的页面。这里同样有几个注意点：</p><p>域名解析注意点：</p><ul><li>如果通过域名访问，你需要购买域名、域名备案、备案完成后添加域名解析记录解析你的服务器IP地址。</li><li>域名备案这个过程需要先买服务器才能进行备案，因为这需要你的服务器公网IP地址，否则是备案不了的，这个备案完成过程大概在20-30天左右完成。</li><li>如果你需要使用到域名解析，首次备案所花费的时间需要你自己合理安排。</li><li>当然，如果你已经有一个备案的域名了，一个顶级域名下，可以拥有多个二级域名或三级域名的，此时你只需添加域名解析记录即可。</li><li>为什么要添加域名解析记录，这里涉及到DNS域名解析过程，这里不详细展开讲，但可以查看此网站的相关文章。</li><li>也许你会注意到，为什么我没有首次域名备案，就添加了域名解析记录，但还是可以通过浏览器输入我的域名访问到我的网站。但别高兴太早，只是别人服务商没有及时检测出来你有没有备案，当检测到你没有备案后，会访问不了你的网站的，且会提示你去域名备案。</li></ul><p>一般我们输入都是<code>协议:域名:端口号/页面路径。</code>这里也有需要注意的点：</p><ul><li>协议分为http和https，http默认端口号为80，https默认端口号为443，服务器提供商默认都会开启这两个端口号，同时你也可以进行修改，但是修改后的端口号，你要看看是否开启了端口号访问，阿里云里面叫安全组，腾讯云里面叫防火墙。同时你可以在此面板看到可以访问的端口号，如下图我列举在阿里云安全组查看可以访问的端口号：</li></ul><figure><img src="`+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>图中3389默认都为window系统远程桌面连接开启的端口号，而22是Linux系统默认远程连接开启的端口号，可见我并没有开启80端口号和443端口号的访问，我这里只实现http协议的访问，所以我先新增一个80端口号的访问。</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>由图中点击<code>快速添加</code>按钮，勾选HTTP和HTTPS，点击确定。</p><p>此时，打开你的浏览器，地址栏里输入<code>http://xx.xx.xx.xx:80</code>（你的公网IP），如<code>http://192.168.1.1:80</code>，由于浏览器默认为http协议，端口80或端口443都可以省略不写。即<code>xx.xx.xx.xx</code>。</p><p>如果你是域名访问，端口默认80可以省略，如<code>http://www.example.com</code>或端口默认443可以省略，如<code>http://www.example.com</code>。</p><p>如果http端口号不是80，<code>http://www.example.com:你设置的端口号</code>，https端口号不是443，则是<code>https://www.example.com:你设置的端口号</code>。</p><p>至此，你学会了部署你的网站到服务器后，如何通过浏览器进行访问了。</p>',80);function f(v,y){const o=c("RouterLink");return i(),s("div",null,[h,t(" more "),n("p",null,[e("了解此文章的前置知识是需要了解"),d(o,{to:"/devops/nginx.html"},{default:a(()=>[e("nginx常用命令")]),_:1})]),b])}const k=p(m,[["render",f],["__file","centos-install-nginx.html.vue"]]);export{k as default};
