import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c,b as n,d as a,e as t,f as e}from"./app-af427ef1.js";const p={},r=e('<h3 id="doctype" tabindex="-1"><a class="header-anchor" href="#doctype" aria-hidden="true">#</a> &lt;!DOCTYPE&gt;</h3><ol><li><code>&lt;!DOCTYPE&gt;</code>声明不是HTML标签，它是指示web浏览器关于页面使用哪个HTML版本进行编写的指令。</li><li><code>&lt;!DOCTYPE&gt;</code>没有结束标签。</li><li><code>&lt;!DOCTYPE&gt;</code>声明对大小写不敏感。</li></ol><h3 id="window-location" tabindex="-1"><a class="header-anchor" href="#window-location" aria-hidden="true">#</a> window location</h3><ol><li><code>location.host</code>返回的是web主机域名 + 端口号。</li><li><code>location.hostname</code>返回的仅是web主机域名</li><li><code>location.pathname</code>返回当前页面的路径和文件名</li><li><code>location.port</code>返回web主机的端口，但注意的是，如果端口默认为80或443，则默认返回的为空。</li><li><code>location.protocol</code>返回所使用高德web协议，如<code>http:</code>或<code>https:</code></li></ol><h3 id="和-和-运算符" tabindex="-1"><a class="header-anchor" href="#和-和-运算符" aria-hidden="true">#</a> &lt;&lt; 和 &gt;&gt; 和 &gt;&gt;&gt; 运算符</h3>',5),d=n("li",null,[n("code",null,"<<"),a("运算符执行左移位运算。")],-1),u=n("li",null,[n("code",null,">>"),a("运算符执行右移位运算")],-1),h={href:"http://c.biancheng.net/view/5471.html",target:"_blank",rel:"noopener noreferrer"},k=e('<h3 id="lastindexof" tabindex="-1"><a class="header-anchor" href="#lastindexof" aria-hidden="true">#</a> lastIndexOf</h3><ol><li><code>lastIndexOf</code>从尾部开始检索，从0开始</li></ol><h3 id="js创建节点的方式" tabindex="-1"><a class="header-anchor" href="#js创建节点的方式" aria-hidden="true">#</a> js创建节点的方式</h3><ol><li><code>createElement</code>——创建节点</li><li><code>replaceChild</code>——替换节点</li><li><code>cloneNode</code>——克隆节点</li></ol><h3 id="html5新增特性" tabindex="-1"><a class="header-anchor" href="#html5新增特性" aria-hidden="true">#</a> HTML5新增特性</h3><ol><li>语义化标签</li><li>增强型表单包括属性以及元素</li><li>新增视频<code>&lt;video&gt;</code>和音频<code>&lt;audio&gt;</code>标签</li><li><code>canvas</code>图形</li><li>地理定位</li><li>拖放API</li><li>SVG绘图</li><li>Web Worker</li><li>Web Storage</li><li>Web Socket</li></ol><h3 id="js中比较成熟的模块加载方案" tabindex="-1"><a class="header-anchor" href="#js中比较成熟的模块加载方案" aria-hidden="true">#</a> js中比较成熟的模块加载方案</h3><ol><li>CommonJS——简称cjs，主要是 Node.js 使用，通过 require 同步加载模块，exports 导出内容。在 CommonJS 规范下，每一个 JS 文件都是独立的模块，每个模块都有独立的作用域，模块里的本地变量都是私有的。</li><li>AMD——即异步模块定义。AMD 定义了一套 JavaScript 模块依赖异步加载标准，用来解决浏览器端模块加载的问题。AMD 主要是浏览器端使用，通过 define 定义模块和依赖，require 异步加载模块，推崇依赖前置。</li><li>CMD——即通用模块定义。CMD 定义了一套 JavaScript 模块依赖异步加载标准，用来解决浏览器端模块加载的问题。CMD 主要是浏览器端使用，通过 define 定义模块和依赖，require 异步加载模块，推崇依赖就近。</li><li>UMD——即通用模块定义。UMD 主要为了解决 CommonJS 和 AMD 规范下的代码不通用的问题，是 AMD 和 CommonJS 的整合，同时还支持将模块挂载到全局，是跨平台的解决方案。</li><li>SystemJS——可以通过各种插件，实现对 AMD、UMD 的加载，并且借助运行时编译器，可以实现对 ES Modules 和 CJS 模块的直接加载。</li><li>ESModule——简称es，即 ESModule、ECMAScript Module。官方模块化规范，现代浏览器原生支持，通过 import 加载模块，export 导出内容。</li></ol><h3 id="redux遵循的规则" tabindex="-1"><a class="header-anchor" href="#redux遵循的规则" aria-hidden="true">#</a> redux遵循的规则</h3><ol><li>单一事实来源，整个应用的state被存储在一棵object tree中，并且这个object tree只存在于唯一一个store中；</li><li>状态是只读的，唯一改变state的方法就是触发action，action是一个用于描述发生事件的普通对象；</li><li>使用纯函数进行修改数据</li></ol><h3 id="符合数据结构-栈的特性" tabindex="-1"><a class="header-anchor" href="#符合数据结构-栈的特性" aria-hidden="true">#</a> 符合数据结构-栈的特性</h3><ol><li>线性存储</li><li>后入先出</li></ol><h3 id="属于宏任务的有" tabindex="-1"><a class="header-anchor" href="#属于宏任务的有" aria-hidden="true">#</a> 属于宏任务的有</h3><ol><li><code>setTimeout</code></li><li><code>requestAnimationFrame</code>——请求动画帧</li><li><code>setInterval</code></li></ol><h3 id="属于微任务的有" tabindex="-1"><a class="header-anchor" href="#属于微任务的有" aria-hidden="true">#</a> 属于微任务的有</h3><ol><li><code>Promise</code></li></ol><h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h3>',17),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions",target:"_blank",rel:"noopener noreferrer"},v=e(`<h3 id="移动端动画" tabindex="-1"><a class="header-anchor" href="#移动端动画" aria-hidden="true">#</a> 移动端动画</h3><p>移动端要想动画性能流畅，可以使用3D硬件加速，因此最好给页面中的元素添加translate3d或者translateZ(0)来触发3D硬件加速。<br> 解决浏览器渲染问题，首要目标就是要避免重绘和重排</p><h3 id="关于http2描述" tabindex="-1"><a class="header-anchor" href="#关于http2描述" aria-hidden="true">#</a> 关于HTTP2描述</h3><ol><li>所有http请求都是建立在一个TCP请求上，实现多路复用。</li><li>可以给请求添加优先级</li><li>服务器主动推送server push</li><li>HTTP2的头部会减小，从而减少流量传输</li></ol><h3 id="动态加载js资源" tabindex="-1"><a class="header-anchor" href="#动态加载js资源" aria-hidden="true">#</a> 动态加载js资源</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> head <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
script<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">;</span>
script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;//i.alicdn.com/resource.js&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//绑定资源加载成功事件</span>
script<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//判断资源加载状态是否位加载成功或加载完成</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(loaded|complete)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>script<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        script<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//绑定资源加载失败事件</span>
    script<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span>
    head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>script<span class="token punctuation">,</span>head<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function b(f,g){const s=i("ExternalLinkIcon");return l(),c("div",null,[r,n("ol",null,[d,u,n("li",null,[n("a",h,[a("参考链接"),t(s)])])]),k,n("p",null,[n("a",m,[a("参考链接"),t(s)])]),v])}const j=o(p,[["render",b],["__file","jottings.html.vue"]]);export{j as default};
